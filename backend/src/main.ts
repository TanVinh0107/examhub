import { NestFactory } from '@nestjs/core';
import { AppModule } from './app.module';
import { Logger } from 'nestjs-pino';
import { ValidationPipe } from '@nestjs/common';
import * as express from 'express';
import { join } from 'path';
import helmet from 'helmet';

async function bootstrap() {
  const app = await NestFactory.create(AppModule, { bufferLogs: true });

  // Logger Pino
  app.useLogger(app.get(Logger));

  // Global ValidationPipe
  app.useGlobalPipes(
    new ValidationPipe({
      whitelist: true,
      transform: true,
      forbidNonWhitelisted: true,
    }),
  );

  // Helmet ƒë·ªÉ tƒÉng b·∫£o m·∫≠t
  app.use(helmet());

  // Cho ph√©p CORS
  app.enableCors({
    origin: '*', // n·∫øu FE ch·∫°y ·ªü domain ri√™ng th√¨ ƒëi·ªÅn c·ª• th·ªÉ v√†o ƒë√¢y
    credentials: true,
  });

  // Prefix cho t·∫•t c·∫£ route
  app.setGlobalPrefix('api');

  // ‚ö° Ph·ª•c v·ª• file tƒ©nh: upload ·∫£nh/pdf...
  // V√≠ d·ª•: ·∫£nh l∆∞u trong th∆∞ m·ª•c "uploads"
  // khi truy c·∫≠p: http://localhost:4000/uploads/tenfile.jpg
  app.use('/uploads', express.static(join(process.cwd(), 'uploads')));

  const port = process.env.PORT || 4000;
  await app.listen(port);
  console.log(`üöÄ Server running on http://localhost:${port}/api`);
  console.log(`üìÇ Static files served at http://localhost:${port}/uploads`);
}
bootstrap();
